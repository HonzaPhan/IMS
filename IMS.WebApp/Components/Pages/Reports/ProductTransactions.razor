@page "/reports/product-transactions"

@rendermode InteractiveServer

@inject IJSRuntime JSRuntime
@inject ISearchProductTransactionUseCase SearchProductTransactionUseCase

<h3>Product Transactions</h3>
<br />

<div id="printableArea">
    <div class="row">
        <div class="col">
            <label for="prod">Product Name</label>
            <input type="text" id="prod" class="form-control" @bind-value="prodName" />
        </div>

        <div class="col">
            <label for="df">Date From</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>

        <div class="col">
            <label for="dt">Date To</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>

        <div class="col">
            <label for="at">Activity Type</label>
            <select id="at" class="form-control" @bind="activityTypeId">
                <option value="0"></option>
                <option value="1">Produce Product</option>
                <option value="2">Sell Product</option>
            </select>
        </div>

        <div class="col">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="SearchProducts">Search</button>
        </div>

        <div class="col">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="Print">Print</button>
        </div>
    </div>

    @if (productTransactions != null && productTransactions.Count() > 0)
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Product</th>
                    <th>Activity Type</th>
                    <th>Quantity Before</th>
                    <th>Quantity After</th>
                    <th>Unit Price</th>
                    <th>SO#</th>
                    <th>Production</th>
                </tr>
            </thead>
            <tbody>
                @foreach (ProductTransaction it in productTransactions)
                {
                    <tr>
                        <td>@it.TransactionDate.ToString("dd/MM/yyyy")</td>
                        <td>@it.Product?.ProductName</td>
                        <td>
                            @if (it.ActivityType == ProductTransactionType.ProduceProduct)
                            {
                                 <text>Produce</text>
                            }
                            else if (it.ActivityType == ProductTransactionType.SellProduct)
                            {
                                 <text>Sell</text>
                            }
                        </td>
                        <td>@it.QuantityBefore</td>
                        <td>@it.QuantityAfter</td>
                        <td>@it.UnitPrice?.ToString("c")</td>
                        <td>@it.SoNumber</td>
                        <td>@it.ProductionNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private string prodName = string.Empty;
    private DateTime? dateFrom, dateTo;
    private int activityTypeId;
    private IEnumerable<ProductTransaction>? productTransactions;

    public async Task SearchProducts()
    {
        ProductTransactionType? productTransactionType = null;

        if (activityTypeId != 0) productTransactionType = (ProductTransactionType)activityTypeId;

        productTransactions = await SearchProductTransactionUseCase.ExecuteAsync(prodName, dateFrom, dateTo, productTransactionType);
    }

    public async Task Print()
    {
        await JSRuntime.InvokeVoidAsync("print");
    }
}
