@page "/reports/inventory-transactions"

@rendermode InteractiveServer

@inject ISearchInventoryTransactionUseCase SearchInventoryTransactionUseCase

<h3>Inventory Transactions</h3>
<br />

<div class="row">
    <div class="col">
        <label for="inv">Inventory Name</label>
        <input type="text" id="inv" class="form-control" @bind-value="invName" />
    </div>

    <div class="col">
        <label for="df">Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>

    <div class="col">
        <label for="dt">Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>

    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind="activityTypeId">
            <option value="0"></option>
            <option value="1">Purchase Inventory</option>
            <option value="2">Produce Product</option>
        </select>
    </div>

    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
    </div>
</div>

@if (inventoryTransactions != null && inventoryTransactions.Count() > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Date</th>
                <th>Inventory</th>
                <th>Activity Type</th>
                <th>Quantity Before</th>
                <th>Quantity After</th>
                <th>PO#</th>
                <th>Production</th>
            </tr>
        </thead>
        <tbody>
            @foreach (InventoryTransaction it in inventoryTransactions)
            {
                <tr>
                    <td>@it.TransactionDate.ToString("dd/MM/yyyy")</td>
                    <td>@it.Inventory?.InventoryName</td>
                    <td>
                        @if (it.ActivityType == InventoryTransactionType.PurchaseInventory)
                        {
                             <text>Purchase</text>
                        }
                        else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                        {
                             <text>Produce</text>
                        }
                    </td>
                    <td>@it.QuantityBefore</td>
                    <td>@it.QuantityAfter</td>
                    <td>@it.PoNumber</td>
                    <td>@it.ProductionNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string invName = string.Empty;
    private DateTime? dateFrom, dateTo;
    private int activityTypeId;
    private IEnumerable<InventoryTransaction>? inventoryTransactions;

    public async Task SearchInventories()
    {
        InventoryTransactionType? inventoryTransactionType = null;

        if (activityTypeId != 0) inventoryTransactionType = (InventoryTransactionType)activityTypeId;

        inventoryTransactions = await SearchInventoryTransactionUseCase.ExecuteAsync(invName, dateFrom, dateTo, inventoryTransactionType);
    }
}
