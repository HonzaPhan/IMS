@page "/inventories/edit/{id:int}"

@inject IViewInventoryByIdUseCase ViewInventoryByIdUseCase
@inject IEditInventoryUseCase EditInventoryUseCase
@inject NavigationManager NavigationManager

<h3>Edit Inventory</h3>
<br />
@if (inventory != null)
{
    <EditInventoryComponent Inventory="inventory" OnUpdate="() => Update(inventory)" />
}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Inventory? inventory { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        inventory ??= await ViewInventoryByIdUseCase.ExecuteAsync(Id);
    }

    private async Task Update(Inventory updatedInventory)
    {
        if (updatedInventory != null)
        {
            await EditInventoryUseCase.ExecuteAsync(updatedInventory);
            NavigationManager.NavigateTo("/inventories");
        }
    }
}
